8,12c8
< 
< log = open("/home/pi/audio/audiotest/logs/temp.log","a")
< 
< log.write(time.strftime("%D %H:%M:%S")+" Starting new session\n")
< 
---
>  
14,17c10,11
< device_folders = glob.glob(base_dir + '28*')
< device_files = []
< for device_folder in device_folders:
<     device_files.append(device_folder + '/w1_slave')
---
> device_folder = glob.glob(base_dir + '28*')[0]
> device_file = device_folder + '/w1_slave'
19,20c13,14
< def read_temp_raw(index):
<     f = open(device_files[index], 'r')
---
> def read_temp_raw():
>     f = open(device_file, 'r')
25,26c19,20
< def read_temp(index):
<     lines = read_temp_raw(index)
---
> def read_temp():
>     lines = read_temp_raw()
28c22,23
<         lines = read_temp_raw(index)
---
>        # time.sleep(0.2)
>         lines = read_temp_raw()
33,34d27
<         log.write(time.strftime("%D %H:%M:%S")+" "+str(temp_c)+"\n")
< 	log.flush()
38,40c31
< old_temps = []
< min_temp = 9999
< max_temp = 0
---
> old_temp = 0	
42,44d32
< for device_folder in device_folders:
<     old_temps.append(0)
<         
46,72c34,40
<     for i in range(0,len(device_folders)):
<         temp_c = read_temp(i)
< 
<         # gradual recalibration
<         max_temp-=0.01
<         min_temp+=0.01
< 
<         #print("("+str(min_temp)+" -> "+str(max_temp)+")")
<         
<         if temp_c>max_temp: max_temp=temp_c
<         if temp_c<min_temp: min_temp=temp_c
<         
<         temp_range = max_temp-min_temp
<         #print(str(temp_range)+" "+str(min_temps[i])+" "+str(max_temps[i]))
< 
<         temp_norm = 0
<         if temp_range>0:
<             temp_norm = (temp_c-min_temp)/temp_range
<         
<         #print(str(i)+":"+str(temp_c))
<         #print(str(i)+":"+str(temp_c-old_temps[i]))
<         #print(str(i)+" norm :"+str(temp_norm))
<         osc.Message("/temp-"+str(i),[temp_c]).sendlocal(8889)
<         osc.Message("/tempdiff-"+str(i),[temp_c-old_temps[i]]).sendlocal(8889)
<         osc.Message("/tempnorm-"+str(i),[temp_norm]).sendlocal(8889)
<         old_temps[i] = temp_c
< 
---
> 	temp_c = read_temp()
> 	print(temp_c)
> 	print(temp_c-old_temp)
> 	osc.Message("/temp",[temp_c]).sendlocal(8889)
> 	osc.Message("/tempdiff",[temp_c-old_temp]).sendlocal(8889)
> 	old_temp = temp_c
> 	time.sleep(0.1)
